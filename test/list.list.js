// Generated by CoffeeScript 1.3.3
var List, expect;

expect = require('expect.js');

List = require('../lib/coll').List;

describe('List Constructor', function() {
  var ls1, ls2, ls3, ls4;
  ls1 = ls2 = ls3 = ls4 = null;
  beforeEach(function() {
    ls1 = new List;
    ls2 = new List(['a', 2]);
    ls3 = List();
    return ls4 = List([1, 'z']);
  });
  it('should instantiate a new instance with or without the use of `new`', function() {
    expect(ls1).to.be.a(List);
    expect(ls2).to.be.a(List);
    expect(ls3).to.be.a(List);
    return expect(ls4).to.be.a(List);
  });
  it('should set the inital length of the list', function() {
    expect(ls1.length).to.be(0);
    expect(ls2.length).to.be(2);
    expect(ls3.length).to.be(0);
    return expect(ls4.length).to.be(2);
  });
  it('should populate itself with some initial values via the init param', function() {
    expect(ls2[0]).to.be('a');
    expect(ls2[1]).to.be(2);
    expect(ls4[0]).to.be(1);
    return expect(ls4[1]).to.be('z');
  });
  return it('should accept an "iterable" for the init parameter', function() {
    var foo, ls;
    ls = List([1, 2]);
    expect(ls.length).to.be(2);
    ls = List('as');
    expect(ls.length).to.be(2);
    ls = List(List('as'));
    expect(ls.length).to.be(2);
    foo = function() {
      ls = List(arguments);
      return expect(ls.length).to.be(2);
    };
    return foo('a', 'b');
  });
});
