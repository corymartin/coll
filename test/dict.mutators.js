// Generated by CoffeeScript 1.3.3
var Dict, Map, expect, _ref;

expect = require('expect.js');

_ref = require('../lib/coll'), Map = _ref.Map, Dict = _ref.Dict;

describe('Dict / Map Mutators', function() {
  var dict, key1, key2, map;
  map = dict = null;
  key1 = /foo/;
  key2 = /bar/;
  beforeEach(function() {
    map = Map('RegExp', 'Number');
    map.set(key1, 111);
    map.set(key2, 222);
    return dict = Dict({
      a: 1,
      b: 2,
      c: 3
    });
  });
  return describe('#remove', function() {
    it('should remove the key/val for the passed key', function() {
      expect(map.hasKey(key1)).to.be(true);
      map.remove(key1);
      expect(map.hasKey(key1)).to.be(false);
      expect(dict.hasKey('b')).to.be(true);
      dict.remove('b');
      return expect(dict.hasKey('b')).to.be(false);
    });
    it('should `true` if the key/val was successfully removed', function() {
      var x;
      x = map.remove(key1);
      expect(x).to.be(true);
      x = dict.remove('b');
      return expect(x).to.be(true);
    });
    return it('should `false` if the key/val was not removed', function() {
      var x;
      x = map.remove(/zzz/);
      expect(x).to.be(false);
      x = dict.remove('q');
      return expect(x).to.be(false);
    });
  });
});
